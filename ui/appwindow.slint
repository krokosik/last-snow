import { Button, VerticalBox , TextEdit, HorizontalBox, ComboBox} from "std-widgets.slint";

export component CenterBox inherits VerticalBox {
    alignment: center;
    HorizontalBox {
        alignment: center;
        @children
    }
}

export component AppWindow inherits Window {
    in-out property <int> text-length;
    in property<[string]> languages;
    in property <int> character-limit;
    in-out property <string> selected-language;
    callback select-language(string);
    callback submit-text(string);
    callback text-changed(string);

    width: 1280px;
    height: 400px;
    default-font-size: 16px;
    default-font-family: "PibotoLt";

    forward-focus: input;

    HorizontalLayout {
        CenterBox {
            horizontal-stretch: 1;

            VerticalBox {
                input := TextEdit {
                    height: 200px;
                    width: 800px;
    
    
                    text: "";
                    font-size: 40px;
                    edited(text) => {
                        root.text-changed(text);
                    }
                }
                HorizontalBox {
                    alignment: end;
                    Text {
                        text: root.text-length + "/" + root.character-limit;
                        color: (root.text-length > root.character-limit) ? red : white;
                    }
                }
            }
        }
        VerticalBox {
            alignment: space-around;
            horizontal-stretch: 0;
            width: 150px;

            HorizontalBox {
                horizontal-stretch: 0;
                alignment: center;
                ComboBox {
                    height: 50px;
                    width: 100px;
                    model: root.languages;
                    current-value: root.selected-language;
                    selected(value) => {
                        root.select-language(value);
                    }
                }
            }

            HorizontalBox {
                alignment: center;
                Button {
                    width: 100px;
                    height: 100px;
                    text: "Clear";

                    clicked => {
                        input.text = "";
                        text-length = 0;
                    }
                }
            }
            submit_button := HorizontalBox {
                alignment: center;
                Button {
                    width: 100px;
                    height: 100px;
                    text: "Submit";
                    enabled: input.text != "" && root.text-length <= root.character-limit;
                    clicked => {
                        root.submit-text(input.text);
                        input.text = "";
                        root.text-length = 0;
                    }
                }
            }
        }

    }
}
