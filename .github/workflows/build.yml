name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets: aarch64-unknown-linux-gnu

      - name: Rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target aarch64-unknown-linux-gnu

      - name: Prepare for packaging
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .debpkg/usr/lib/last-snow
          cp target/aarch64-unknown-linux-gnu/release/last-snow .debpkg/usr/bin/last-snow
        
      - name: Package
        id: package
        uses: jiro4989/build-deb-action@v3
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          package: last-snow
          package_root: .debpkg
          maintainer: krokosik
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: arm64
          desc: 'Last Snow Input + Display'

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
            files: ${{ steps.package.outputs.file_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
